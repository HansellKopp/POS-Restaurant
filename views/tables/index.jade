extends ../layout

block content
  #payload(data-tables=tables, data-title=title)
  table#table.mui-table.mui-table--bordered
    caption#tableCaption.mui--text-left
    thead#tableHeader
    tbody#tableBody
  script.
    // define constants
    //
    const data = JSON.parse(document.getElementById('payload').dataset.tables)
    const title = document.getElementById('payload').dataset.title
    const actions = [ 
      { 
        url: '/tables/delete/', 
        icon:  'fa-times',
        color: 'mui--text-accent',
        eventListener: onLinkClick
      },
      { 
        url: '/tables/edit/', 
        icon:  'fa-pencil',
        color: 'mui--text-primary',
        eventListener: onLinkClick
      }
    ]

    // start script
    $(document).ready(function(){
        // Translations
        //
        const { phrases, currentLocale } = JSON.parse(document.getElementById('polyglot').dataset.polyglot)
        const polyglot = new Polyglot({
            phrases,
            currentLocale
        })
        // Breadbrumb
        $('#breadcrumb').append(renderBreadcrumb([
            { text: polyglot.t('breadcrumb.home'), href: '/'},
            { text: polyglot.t('breadcrumb.tables'), href: '/tables'}
        ]))
        // Table
        const fields = [
        { field: 'place', label: polyglot.t('fields.tables.place') },
        { field: 'number', label: polyglot.t('fields.tables.number')},
        { field: 'seats', label: polyglot.t('fields.tables.seats')},
        { filed: 'id' }
        ]
        $('#tableCaption').append(
          makeCaption(
            title, 
            'fa-database',
            polyglot.t('forms.buttons.add'),
            polyglot.t('forms.placeholders.search')
          )
        )
        $('#tableHeader').append(makeHeader(fields))
        $('#tableBody').append(makeBody(fields,data, actions ))
        $('#searchBox').keyup(renderFilter)

    })

    // Render filtered data
    //
    function renderFilter (event) {
      const token = $( this ).val().toUpperCase()
      var currentData = data.filter((s) => 
        s.place.toUpperCase().startsWith(token) || s.number.toUpperCase().startsWith(token)
      )
      $('#tableBody').empty()
      $('#tableBody').append(makeBody(currentData, actions ))
    }

    // manage Edit and Delete actions 
    //
    function onLinkClick( event ) {
      event.preventDefault()
      var target = event.target || event.srcElement
      var element = target.nodeName === 'I'? target.parentNode : target
      var urlArray = element.href.split('/')
      var verb = urlArray[urlArray.length - 2]
      var id = urlArray[urlArray.length - 1]
      switch( verb ) {
        case 'delete':
           $.delete(
            `/api/tables/${id}`
            ).done(function( data ) {
            window.location.href = '/tables/'
          })
          break
        case 'edit':
          window.location.href = `/tables/edit/${id}`
          break
      }
    }

    // manage add button
    //
    function onAddClick() {
      window.location.href = '/tables/create'
    }